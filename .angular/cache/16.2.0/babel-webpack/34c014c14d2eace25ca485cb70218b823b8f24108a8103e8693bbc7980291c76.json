{"ast":null,"code":"var _class;\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/button\";\nfunction LoginComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.emailCTRL = new FormControl(null, [Validators.required, Validators.email]);\n    this.loginFormGroup = new FormGroup({\n      email: this.emailCTRL,\n      password: new FormControl()\n    });\n  }\n  onLogin() {\n    console.log(this.loginFormGroup.valid);\n    // this.router.navigate(['/admin']);\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"seng41293-login\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 15,\n  vars: 4,\n  consts: [[1, \"login-form\", 3, \"formGroup\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"matInput\", \"\", 3, \"formControl\"], [4, \"ngIf\"], [\"type\", \"password\", \"matInput\", \"\", \"formControlName\", \"password\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-form-field\", 1)(4, \"mat-label\");\n      i0.ɵɵtext(5, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 2);\n      i0.ɵɵtemplate(7, LoginComponent_mat_error_7_Template, 2, 0, \"mat-error\", 3);\n      i0.ɵɵtemplate(8, LoginComponent_mat_error_8_Template, 4, 0, \"mat-error\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-form-field\", 1)(10, \"mat-label\");\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_13_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵtext(14, \"Login\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginFormGroup);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formControl\", ctx.emailCTRL);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.emailFormControl.hasError(\"email\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.emailFormControl.hasError(\"required\"));\n    }\n  },\n  dependencies: [CommonModule, i2.NgIf, ReactiveFormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormControlDirective, i3.FormGroupDirective, i3.FormControlName, MatInputModule, i4.MatInput, i5.MatFormField, i5.MatLabel, i5.MatError, MatButtonModule, i6.MatButton],\n  styles: [\"[_nghost-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100vh;\\n}\\n\\n.login-form[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 90%;\\n  flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxhQUFBO0FBQ0o7O0FBQ0E7RUFDRyxhQUFBO0VBQ0EsVUFBQTtFQUNBLHNCQUFBO0FBRUgiLCJmaWxlIjoibG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbn1cbi5sb2dpbi1mb3Jte1xuICAgZGlzcGxheTogZmxleDsgXG4gICB3aWR0aDogOTAlO1xuICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn0iXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL2FwcHMvZGlsYWdyby9zcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxhQUFBO0FBQ0o7O0FBQ0E7RUFDRyxhQUFBO0VBQ0EsVUFBQTtFQUNBLHNCQUFBO0FBRUg7QUFDQSxnbEJBQWdsQiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0e1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDEwMHZoO1xufVxuLmxvZ2luLWZvcm17XG4gICBkaXNwbGF5OiBmbGV4OyBcbiAgIHdpZHRoOiA5MCU7XG4gICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["CommonModule","MatInputModule","MatButtonModule","Router","FormControl","FormGroup","ReactiveFormsModule","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","router","emailCTRL","required","email","loginFormGroup","password","onLogin","console","log","valid","ɵɵdirectiveInject","i1","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","LoginComponent_mat_error_7_Template","LoginComponent_mat_error_8_Template","ɵɵlistener","LoginComponent_Template_button_click_13_listener","ɵɵproperty","ɵɵadvance","emailFormControl","hasError","i2","NgIf","i3","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormControlDirective","FormGroupDirective","FormControlName","i4","MatInput","i5","MatFormField","MatLabel","MatError","i6","MatButton","styles"],"sources":["/Users/chamalsha/Desktop/mobile-web-practice/apps/dilagro/src/app/pages/login/login.component.ts","/Users/chamalsha/Desktop/mobile-web-practice/apps/dilagro/src/app/pages/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'seng41293-login',\n  standalone: true,\n  imports: [CommonModule,ReactiveFormsModule,MatInputModule,MatButtonModule],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n\n  emailCTRL = new FormControl(null,[\n      Validators.required,\n      Validators.email\n    ])\n  loginFormGroup = new FormGroup({\n    email : this.emailCTRL,\n    password : new FormControl()\n  })\n\n  constructor(private router:Router){}\n\n  onLogin(){\n    console.log(this.loginFormGroup.valid);\n    // this.router.navigate(['/admin']);\n  }\n}\n","<form class=\"login-form\" [formGroup] = \"loginFormGroup\">\n    <h2>Login</h2>\n    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n        <mat-label>Username</mat-label>\n        <input matInput [formControl]=\"emailCTRL\">\n        <mat-error *ngIf=\"emailFormControl.hasError('email')\">\n            Please enter a valid email address\n        </mat-error>\n        <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n            Email is <strong>required</strong>\n        </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n        <mat-label>Password</mat-label>\n        <input type=\"password\" matInput formControlName=\"password\">\n    </mat-form-field>\n    <button mat-flat-button color=\"primary\" (click)=\"onLogin()\">Login</button>\n</form>\n\n"],"mappings":";AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,WAAW,EAAEC,SAAS,EAAeC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;;;ICA7FC,EAAA,CAAAC,cAAA,gBAAsD;IAClDD,EAAA,CAAAE,MAAA,2CACJ;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IACZH,EAAA,CAAAC,cAAA,gBAAyD;IACrDD,EAAA,CAAAE,MAAA,iBAAS;IAAAF,EAAA,CAAAC,cAAA,aAAQ;IAAAD,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;ADK9C,OAAM,MAAOC,cAAc;EAWzBC,YAAoBC,MAAa;IAAb,KAAAA,MAAM,GAANA,MAAM;IAT1B,KAAAC,SAAS,GAAG,IAAIX,WAAW,CAAC,IAAI,EAAC,CAC7BG,UAAU,CAACS,QAAQ,EACnBT,UAAU,CAACU,KAAK,CACjB,CAAC;IACJ,KAAAC,cAAc,GAAG,IAAIb,SAAS,CAAC;MAC7BY,KAAK,EAAG,IAAI,CAACF,SAAS;MACtBI,QAAQ,EAAG,IAAIf,WAAW;KAC3B,CAAC;EAEiC;EAEnCgB,OAAOA,CAAA;IACLC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,cAAc,CAACK,KAAK,CAAC;IACtC;EACF;;SAhBWX,cAAc;;mBAAdA,MAAc,EAAAJ,EAAA,CAAAgB,iBAAA,CAAAC,EAAA,CAAAtB,MAAA;AAAA;;QAAdS,MAAc;EAAAc,SAAA;EAAAC,UAAA;EAAAC,QAAA,GAAApB,EAAA,CAAAqB,mBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCd3B3B,EAAA,CAAAC,cAAA,cAAwD;MAChDD,EAAA,CAAAE,MAAA,YAAK;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACdH,EAAA,CAAAC,cAAA,wBAAgE;MACjDD,EAAA,CAAAE,MAAA,eAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAC/BH,EAAA,CAAA6B,SAAA,eAA0C;MAC1C7B,EAAA,CAAA8B,UAAA,IAAAC,mCAAA,uBAEY;MACZ/B,EAAA,CAAA8B,UAAA,IAAAE,mCAAA,uBAEY;MAChBhC,EAAA,CAAAG,YAAA,EAAiB;MACjBH,EAAA,CAAAC,cAAA,wBAAgE;MACjDD,EAAA,CAAAE,MAAA,gBAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAC/BH,EAAA,CAAA6B,SAAA,gBAA2D;MAC/D7B,EAAA,CAAAG,YAAA,EAAiB;MACjBH,EAAA,CAAAC,cAAA,iBAA4D;MAApBD,EAAA,CAAAiC,UAAA,mBAAAC,iDAAA;QAAA,OAASN,GAAA,CAAAhB,OAAA,EAAS;MAAA,EAAC;MAACZ,EAAA,CAAAE,MAAA,aAAK;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MAhBrDH,EAAA,CAAAmC,UAAA,cAAAP,GAAA,CAAAlB,cAAA,CAA8B;MAI/BV,EAAA,CAAAoC,SAAA,GAAyB;MAAzBpC,EAAA,CAAAmC,UAAA,gBAAAP,GAAA,CAAArB,SAAA,CAAyB;MAC7BP,EAAA,CAAAoC,SAAA,GAAwC;MAAxCpC,EAAA,CAAAmC,UAAA,SAAAP,GAAA,CAAAS,gBAAA,CAAAC,QAAA,UAAwC;MAGxCtC,EAAA,CAAAoC,SAAA,GAA2C;MAA3CpC,EAAA,CAAAmC,UAAA,SAAAP,GAAA,CAAAS,gBAAA,CAAAC,QAAA,aAA2C;;;iBDEnD9C,YAAY,EAAA+C,EAAA,CAAAC,IAAA,EAAC1C,mBAAmB,EAAA2C,EAAA,CAAAC,aAAA,EAAAD,EAAA,CAAAE,oBAAA,EAAAF,EAAA,CAAAG,eAAA,EAAAH,EAAA,CAAAI,oBAAA,EAAAJ,EAAA,CAAAK,oBAAA,EAAAL,EAAA,CAAAM,kBAAA,EAAAN,EAAA,CAAAO,eAAA,EAACvD,cAAc,EAAAwD,EAAA,CAAAC,QAAA,EAAAC,EAAA,CAAAC,YAAA,EAAAD,EAAA,CAAAE,QAAA,EAAAF,EAAA,CAAAG,QAAA,EAAC5D,eAAe,EAAA6D,EAAA,CAAAC,SAAA;EAAAC,MAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}